@model MyLink.Models.Link

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Link</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-success" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })            
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LanguageId, "Idioma", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LinkCategoryId, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("LinkCategoryId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LinkCategoryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Ranking, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ranking, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ranking, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="form-check col-md-offset-2 col-md-10">
            <label class="form-check-label">Subtitle</label>
            @Html.EditorFor(model => model.Subtitle)
            &nbsp;
            <label class="form-check-label">Old</label>
            @Html.EditorFor(model => model.Old)
            &nbsp;
            <label class="form-check-label">Series</label>
            @Html.EditorFor(model => model.Series)
            &nbsp;
            <label class="form-check-label">Top</label>
            @Html.EditorFor(model => model.Top)
            &nbsp;
            <label class="form-check-label">Pending</label>
            @Html.EditorFor(model => model.Pending)
            &nbsp;
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Chapter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Chapter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Chapter, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.TotalChapter, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.TotalChapter, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalChapter, "", new { @class = "text-danger" })
        </div>
    </div>    

    <div class="form-group">
        @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group date" id="datepickerBirth" style="width: 280px">
                @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
        </div>
    </div>

</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            $('#datepickerBirth').datetimepicker({ format: 'YYYY/MM/DD' });            
        });
        
    </script>
}

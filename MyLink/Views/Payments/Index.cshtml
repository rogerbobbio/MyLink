@model PagedList.IPagedList<MyLink.Models.Payment>
@using PagedList.Mvc

@{
    ViewBag.Title = "Pagos";
}

@using (Html.BeginForm("Index", "Payments", FormMethod.Get))
{
    <div style="border-bottom:1px solid #bbb"><h1>Busqueda de Pagos</h1></div>

    <table class="table table-bordered">
        <tbody>
        <tr>
                <th scope="row">@Html.LabelFor(model => model.FirstOrDefault().Bank)</th>
                <td colspan="2">@Html.TextBox("bank")</td>
                <td><input name="SearchButton" type="submit" value="Buscar" class="btn btn-success" /></td>
            </tr>
            <tr>
                <th scope="row">@Html.LabelFor(model => model.FirstOrDefault().Account)</th>
                <td>@Html.TextBox("account")</td>
                <th scope="row">@Html.LabelFor(model => model.FirstOrDefault().PersonCharge)</th>
                <td>@Html.TextBox("personCharge")</td>
            </tr>
            <tr>
                <th scope="row">@Html.LabelFor(model => model.FirstOrDefault().ProjectId, "Proyecto")</th>
                <td>@Html.DropDownList("projectId", null, htmlAttributes: new { @class = "form-control" })</td>
                <th scope="row">@Html.LabelFor(model => model.FirstOrDefault().ProviderFlag)</th>
                <td>@Html.CheckBox("providerFlag")</td>
            </tr>
            <tr>
                <th scope="row">Fecha Inicio</th>
                <td><div>
                        @Html.TextBox("startDate", null, new { @class = "datepicker", @type = "date" })
                </div>
            </td>
                <th scope="row">Fecha Fin</th>
                <td><div>
                        @Html.TextBox("endDate", null, new { @class = "datepicker", @type = "date" })                        
                </div>
            </td>
        </tr>        
        </tbody>
    </table>
}



<div style="border-bottom:1px solid #bbb"><h1>Resultado</h1></div>
<p>
    @Html.ActionLink("PAGAR", "Create", new { }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Exportar a Excel", "ExportToExcel", new { }, new { @class = "btn btn-info" })
    <h3>Numero de Registros <span class="label label-default">@ViewBag.RecordCount</span></h3>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PaymentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Project.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ProviderFlag)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Bank)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Account)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().InterbankCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().PersonCharge)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Amount)
        </th>
        <th>
            @Html.ActionLink("Fecha", "Index", new { sortOrder = ViewBag.DateSortParm })
        </th>
        <th></th>
    </tr>

    @if (!Model.Any())
            {
        <tr>
            <td colspan="3" style="color: red">
                No se encontraron registros
            </td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProviderFlag)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bank)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Account)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InterbankCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PersonCharge)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreationDate, "{0:dd/MM/yyyy}")
                </td>
                <td>
                    <a href="@Url.Action("Edit", "Payments", new {id = item.PaymentId })" class="btn btn-warning">
                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                    </a>
                </td>
                <td>
                    <a href="@Url.Action("Delete", "Payments" , new { id = item.PaymentId })" class="btn btn-danger">
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    </a>
                </td>
                <td>
                    <a href="@Url.Action("Details", "Payments" , new { id = item.PaymentId })" class="btn btn-info">
                        <span class="glyphicon glyphicon-zoom-in" aria-hidden="true"></span>
                    </a>
                </td>                
            </tr>
        }
    }

</table>

        Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber), de: @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new
   {
       page,
       sortOrder = ViewBag.CurrentSort,
       currentFilter = ViewBag.CurrentFilter,
       projectId = ViewBag.ProjectSelectedId,
       personCharge = ViewBag.PersonChargeSelected,
       account = ViewBag.AccountSelected,
       bank = ViewBag.BankSelected,
       startDate = ViewBag.StartDate,
       endDate = ViewBag.EndDate
   }))